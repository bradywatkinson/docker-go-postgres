version: '2'
services:
  localdev:
    build:
      context: .
      dockerfile: ./Dockerfile.localdev
    command: go run main.go common v1 models
    environment:
      - APP_DB_USERNAME=dev
      - APP_DB_PASSWORD=dev
      - APP_DB_NAME=dev
    links:
      - postgres
    volumes:
      - ./app/:/go/src/app
      - /go/src/app/vendor
      - /go/src/app/build
    ports:
      - "8080:8080"

  test:
    build:
      context: .
      dockerfile: ./Dockerfile.localdev
    command: sh -c "golint ./... && go test ./... -v"
    environment:
      - APP_DB_USERNAME=dev
      - APP_DB_PASSWORD=dev
      - APP_DB_NAME=test
    links:
      - postgres
    volumes:
      - ./app/:/go/src/app
      - /go/src/app/vendor

  manage_db:
    build:
      context: .
      dockerfile: ./Dockerfile.manage_db
    command: upgrade
    entrypoint: python3 manage.py db
    environment:
      - REALM=localdev
      - PYTHONUNBUFFERED=true
    links:
      - postgres
    volumes:
      - ./db:/code

  lint:
    build:
      context: .
      dockerfile: ./Dockerfile.manage_db
    entrypoint: flake8
    volumes:
      - ./db/:/code
    environment:
      - REALM=test
      - PYTHONUNBUFFERED=true

  postgres:
    build:
      context: .
      dockerfile: ./Dockerfile.postgres
    environment:
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=dev
      - POSTGRES_DB=dev
    volumes:
      - "postgres:/var/lib/postgresql/data"

volumes:
  postgres:
