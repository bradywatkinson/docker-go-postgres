// Code generated by protoc-gen-go. DO NOT EDIT.
// source: merchant/merchant.proto

package merchant

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// MerchantRequest
type MerchantRequest struct {
	Id                   int32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Merchant             *MerchantSchema `protobuf:"bytes,2,opt,name=merchant,proto3" json:"merchant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MerchantRequest) Reset()         { *m = MerchantRequest{} }
func (m *MerchantRequest) String() string { return proto.CompactTextString(m) }
func (*MerchantRequest) ProtoMessage()    {}
func (*MerchantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_merchant_5928b3f01e924b5a, []int{0}
}
func (m *MerchantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantRequest.Unmarshal(m, b)
}
func (m *MerchantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantRequest.Marshal(b, m, deterministic)
}
func (dst *MerchantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantRequest.Merge(dst, src)
}
func (m *MerchantRequest) XXX_Size() int {
	return xxx_messageInfo_MerchantRequest.Size(m)
}
func (m *MerchantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantRequest proto.InternalMessageInfo

func (m *MerchantRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MerchantRequest) GetMerchant() *MerchantSchema {
	if m != nil {
		return m.Merchant
	}
	return nil
}

// The merchant interface schema
type MerchantSchema struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantSchema) Reset()         { *m = MerchantSchema{} }
func (m *MerchantSchema) String() string { return proto.CompactTextString(m) }
func (*MerchantSchema) ProtoMessage()    {}
func (*MerchantSchema) Descriptor() ([]byte, []int) {
	return fileDescriptor_merchant_5928b3f01e924b5a, []int{1}
}
func (m *MerchantSchema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantSchema.Unmarshal(m, b)
}
func (m *MerchantSchema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantSchema.Marshal(b, m, deterministic)
}
func (dst *MerchantSchema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantSchema.Merge(dst, src)
}
func (m *MerchantSchema) XXX_Size() int {
	return xxx_messageInfo_MerchantSchema.Size(m)
}
func (m *MerchantSchema) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantSchema.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantSchema proto.InternalMessageInfo

func (m *MerchantSchema) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MerchantSchema) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// MerchantsRequest describes a request to get count merchants starting at id start
type MerchantsRequest struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Start                int32    `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantsRequest) Reset()         { *m = MerchantsRequest{} }
func (m *MerchantsRequest) String() string { return proto.CompactTextString(m) }
func (*MerchantsRequest) ProtoMessage()    {}
func (*MerchantsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_merchant_5928b3f01e924b5a, []int{2}
}
func (m *MerchantsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantsRequest.Unmarshal(m, b)
}
func (m *MerchantsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantsRequest.Marshal(b, m, deterministic)
}
func (dst *MerchantsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantsRequest.Merge(dst, src)
}
func (m *MerchantsRequest) XXX_Size() int {
	return xxx_messageInfo_MerchantsRequest.Size(m)
}
func (m *MerchantsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantsRequest proto.InternalMessageInfo

func (m *MerchantsRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *MerchantsRequest) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

// MerchantsResponse is a list of merchants
type MerchantsResponse struct {
	Merchants            []*MerchantSchema `protobuf:"bytes,1,rep,name=merchants,proto3" json:"merchants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MerchantsResponse) Reset()         { *m = MerchantsResponse{} }
func (m *MerchantsResponse) String() string { return proto.CompactTextString(m) }
func (*MerchantsResponse) ProtoMessage()    {}
func (*MerchantsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_merchant_5928b3f01e924b5a, []int{3}
}
func (m *MerchantsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantsResponse.Unmarshal(m, b)
}
func (m *MerchantsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantsResponse.Marshal(b, m, deterministic)
}
func (dst *MerchantsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantsResponse.Merge(dst, src)
}
func (m *MerchantsResponse) XXX_Size() int {
	return xxx_messageInfo_MerchantsResponse.Size(m)
}
func (m *MerchantsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantsResponse proto.InternalMessageInfo

func (m *MerchantsResponse) GetMerchants() []*MerchantSchema {
	if m != nil {
		return m.Merchants
	}
	return nil
}

func init() {
	proto.RegisterType((*MerchantRequest)(nil), "merchant.MerchantRequest")
	proto.RegisterType((*MerchantSchema)(nil), "merchant.MerchantSchema")
	proto.RegisterType((*MerchantsRequest)(nil), "merchant.MerchantsRequest")
	proto.RegisterType((*MerchantsResponse)(nil), "merchant.MerchantsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MerchantServiceClient is the client API for MerchantService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MerchantServiceClient interface {
	// Create a merchant
	CreateMerchant(ctx context.Context, in *MerchantSchema, opts ...grpc.CallOption) (*MerchantSchema, error)
	// Get a merchant by id
	GetMerchant(ctx context.Context, in *MerchantRequest, opts ...grpc.CallOption) (*MerchantSchema, error)
	// Update a merchant by id
	UpdateMerchant(ctx context.Context, in *MerchantRequest, opts ...grpc.CallOption) (*MerchantSchema, error)
	// Delete a merchant by id
	DeleteMerchant(ctx context.Context, in *MerchantRequest, opts ...grpc.CallOption) (*wrappers.StringValue, error)
	// GetMerchants gets a list of merchants by start and count
	GetMerchants(ctx context.Context, in *MerchantsRequest, opts ...grpc.CallOption) (*MerchantsResponse, error)
}

type merchantServiceClient struct {
	cc *grpc.ClientConn
}

func NewMerchantServiceClient(cc *grpc.ClientConn) MerchantServiceClient {
	return &merchantServiceClient{cc}
}

func (c *merchantServiceClient) CreateMerchant(ctx context.Context, in *MerchantSchema, opts ...grpc.CallOption) (*MerchantSchema, error) {
	out := new(MerchantSchema)
	err := c.cc.Invoke(ctx, "/merchant.MerchantService/CreateMerchant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) GetMerchant(ctx context.Context, in *MerchantRequest, opts ...grpc.CallOption) (*MerchantSchema, error) {
	out := new(MerchantSchema)
	err := c.cc.Invoke(ctx, "/merchant.MerchantService/GetMerchant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) UpdateMerchant(ctx context.Context, in *MerchantRequest, opts ...grpc.CallOption) (*MerchantSchema, error) {
	out := new(MerchantSchema)
	err := c.cc.Invoke(ctx, "/merchant.MerchantService/UpdateMerchant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) DeleteMerchant(ctx context.Context, in *MerchantRequest, opts ...grpc.CallOption) (*wrappers.StringValue, error) {
	out := new(wrappers.StringValue)
	err := c.cc.Invoke(ctx, "/merchant.MerchantService/DeleteMerchant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) GetMerchants(ctx context.Context, in *MerchantsRequest, opts ...grpc.CallOption) (*MerchantsResponse, error) {
	out := new(MerchantsResponse)
	err := c.cc.Invoke(ctx, "/merchant.MerchantService/GetMerchants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MerchantServiceServer is the server API for MerchantService service.
type MerchantServiceServer interface {
	// Create a merchant
	CreateMerchant(context.Context, *MerchantSchema) (*MerchantSchema, error)
	// Get a merchant by id
	GetMerchant(context.Context, *MerchantRequest) (*MerchantSchema, error)
	// Update a merchant by id
	UpdateMerchant(context.Context, *MerchantRequest) (*MerchantSchema, error)
	// Delete a merchant by id
	DeleteMerchant(context.Context, *MerchantRequest) (*wrappers.StringValue, error)
	// GetMerchants gets a list of merchants by start and count
	GetMerchants(context.Context, *MerchantsRequest) (*MerchantsResponse, error)
}

func RegisterMerchantServiceServer(s *grpc.Server, srv MerchantServiceServer) {
	s.RegisterService(&_MerchantService_serviceDesc, srv)
}

func _MerchantService_CreateMerchant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantSchema)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).CreateMerchant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.MerchantService/CreateMerchant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).CreateMerchant(ctx, req.(*MerchantSchema))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_GetMerchant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).GetMerchant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.MerchantService/GetMerchant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).GetMerchant(ctx, req.(*MerchantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_UpdateMerchant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).UpdateMerchant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.MerchantService/UpdateMerchant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).UpdateMerchant(ctx, req.(*MerchantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_DeleteMerchant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).DeleteMerchant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.MerchantService/DeleteMerchant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).DeleteMerchant(ctx, req.(*MerchantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_GetMerchants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).GetMerchants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.MerchantService/GetMerchants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).GetMerchants(ctx, req.(*MerchantsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MerchantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "merchant.MerchantService",
	HandlerType: (*MerchantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMerchant",
			Handler:    _MerchantService_CreateMerchant_Handler,
		},
		{
			MethodName: "GetMerchant",
			Handler:    _MerchantService_GetMerchant_Handler,
		},
		{
			MethodName: "UpdateMerchant",
			Handler:    _MerchantService_UpdateMerchant_Handler,
		},
		{
			MethodName: "DeleteMerchant",
			Handler:    _MerchantService_DeleteMerchant_Handler,
		},
		{
			MethodName: "GetMerchants",
			Handler:    _MerchantService_GetMerchants_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "merchant/merchant.proto",
}

func init() { proto.RegisterFile("merchant/merchant.proto", fileDescriptor_merchant_5928b3f01e924b5a) }

var fileDescriptor_merchant_5928b3f01e924b5a = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xd7, 0xcd, 0x89, 0x7b, 0x93, 0xaa, 0x41, 0xb0, 0x56, 0x91, 0x91, 0xd3, 0x4e, 0x1d,
	0xcc, 0xe1, 0xd1, 0x8b, 0xc3, 0x21, 0xc3, 0x4b, 0x87, 0x7a, 0xce, 0xba, 0x67, 0x57, 0x68, 0x9b,
	0x9a, 0xa4, 0x7a, 0xf5, 0x4f, 0x17, 0x9b, 0xa6, 0xab, 0xd4, 0x0d, 0xf1, 0x96, 0x97, 0xf7, 0x7d,
	0xbf, 0x7c, 0x2f, 0x09, 0x9c, 0x25, 0x28, 0x82, 0x35, 0x4b, 0xd5, 0xc8, 0x2c, 0xbc, 0x4c, 0x70,
	0xc5, 0xc9, 0x81, 0xa9, 0xdd, 0xab, 0x90, 0xf3, 0x30, 0xc6, 0x51, 0xb1, 0xbf, 0xcc, 0x5f, 0x47,
	0x1f, 0x82, 0x65, 0x19, 0x0a, 0xa9, 0x95, 0xf4, 0x05, 0x8e, 0x1e, 0x4b, 0xad, 0x8f, 0x6f, 0x39,
	0x4a, 0x45, 0x6c, 0x68, 0x47, 0x2b, 0xc7, 0x1a, 0x58, 0xc3, 0xae, 0xdf, 0x8e, 0x56, 0x64, 0x02,
	0x15, 0xce, 0x69, 0x0f, 0xac, 0x61, 0x7f, 0xec, 0x78, 0xd5, 0x79, 0xc6, 0xbc, 0x08, 0xd6, 0x98,
	0x30, 0xbf, 0x52, 0xd2, 0x09, 0xd8, 0x3f, 0x7b, 0x0d, 0x2e, 0x81, 0xbd, 0x94, 0x25, 0x58, 0x30,
	0x7b, 0x7e, 0xb1, 0xa6, 0xb7, 0x70, 0x6c, 0x5c, 0xd2, 0xe4, 0x39, 0x85, 0x6e, 0xc0, 0xf3, 0x54,
	0x95, 0x56, 0x5d, 0x7c, 0xef, 0x4a, 0xc5, 0x84, 0x8e, 0xd4, 0xf5, 0x75, 0x41, 0xe7, 0x70, 0x52,
	0xf3, 0xcb, 0x8c, 0xa7, 0x12, 0xc9, 0x0d, 0xf4, 0x4c, 0x2c, 0xe9, 0x58, 0x83, 0xce, 0xce, 0x09,
	0x36, 0xd2, 0xf1, 0x67, 0x67, 0x73, 0x39, 0x0b, 0x14, 0xef, 0x51, 0x80, 0xe4, 0x1e, 0xec, 0x3b,
	0x81, 0x4c, 0xa1, 0x69, 0x90, 0xad, 0x28, 0x77, 0x6b, 0x87, 0xb6, 0xc8, 0x14, 0xfa, 0x33, 0x54,
	0x15, 0xe4, 0xbc, 0x29, 0x2d, 0xc7, 0xdf, 0x49, 0x99, 0x81, 0xfd, 0x94, 0xad, 0xea, 0x69, 0xfe,
	0x09, 0x9a, 0x83, 0x3d, 0xc5, 0x18, 0xff, 0x06, 0xba, 0xf4, 0xf4, 0xa7, 0xf2, 0xcc, 0xa7, 0xf2,
	0x16, 0x4a, 0x44, 0x69, 0xf8, 0xcc, 0xe2, 0x1c, 0x69, 0x8b, 0x3c, 0xc0, 0x61, 0x6d, 0x36, 0x49,
	0xdc, 0x26, 0xca, 0x3c, 0xae, 0x7b, 0xf1, 0x6b, 0x4f, 0x3f, 0x1c, 0x6d, 0x2d, 0xf7, 0x8b, 0x23,
	0xae, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x63, 0xd4, 0x88, 0x69, 0xea, 0x02, 0x00, 0x00,
}
